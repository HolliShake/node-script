import ( Dog ) from "./test.ns";
import ( Args ) from "go:os";
import ( Println, Print ) from "go:fmt";
import ( Time ) from "go:time";

var DATA i32 = 100, TYPE str = "true", PascalTest i8 = 10;

struct Person {
    Name  str;
    Age   i32;
    Pet   Dog;
    IsGay bool;
}

function (p Person) GetName() str {
    return p.Name;
}

struct King {
    Name str;
    Age  i32;
    Pet  Dog;
}

function (p Person) GetPet() void panics {
   panic("Tada!!!");
}

const Kill str = "adadaasdas";

var Permute (i32):num = 
function(a i32) num {
    return 2.0;
};

function add(a i32, b i32) i32 panics {
    panic(">> Damn..");
    return a + b;
}

function justCall() void panics {
    println(add(10, 20));
}

function toNewThread() i32 {
    println("Hello World From new Thread!!");
    return 1;
}

function returnArr() [str] {
    return ["A", "B", "C"];
}

function returnErr() (bool, error) {
    return true, null;
}

function addFn(a i32, b i32) i32 {
    return a + b;
}

function main(args [str]) i32 {
    local g i32 = 1000 + 2;
    a, b, c := 1, 2, 3;
    println(
        "Hello, World!",
        args,
        0xff,
        a,b,c,g
    );
    v := 2 << 2;
    println(v);
    const arr [i32] = [1, 2, 3, 4];
    println(arr);
    arr.Push(1000);
    println(arr);
    println(arr.Pop());
    run toNewThread();
    Println("Hello, from Go mix!!");
    x, y := returnErr();
    Println(x, y);
    local p Person* = new Person {
        Name: "Philipp Andrew",
        Age: 24,
        Pet: Dog {
            Name: "Brownie",
            Age: 20
        },
        IsGay: if (v > 10) true else false
    };
    println(if (3 < 2) "Hello" else "22"); 
    println(p);
    local intptr i32* = null;
    println(intptr);
    Println(p.Name, p.GetName());
    Println(+200);
    Println(-200);
    Println(~200);
    Println(!false);
    local label str = 
        if (!p.IsGay) 
            "true"
        else 
            "false";
    println(label);
    arr[0] = 1000 << 6;
    p.Name = "Doy";
    Println(p, arr[0]);
    arr[0] += 2;
    arr[0] -= 2;
    arr[0] ++;
    arr[0] --;
    local mp {str:i32} = {
        "One": 1,
        "Two": 2
    };
    Println(mp, arr);
    mp["One"] += 2;
    Println(mp["One"], arr.Get(0), mp.Get("One"), {
        "One": 1,
        "Two": 2
    });
    local add (i32, i32):i32 = addFn;
    Println(add(1, 2));
    mp.Set("Three", 3);
    Println(mp);
    mp.Delete("Three");
    Println(mp);

    arr[0] = 1;
   
    arr.Each(function(index i64, value i32) void {
        Println(index, value << index);
    });

    Println(Permute(20));

    if (3 >= 3) {
        Println("Yes");
    }

    for 
        arr[0]++;
    if (arr[0] < 5);


    local y1 ():void;
    for (var x1 i32 = 0;y1 != null; x1, y1 = +1,(function() void { Println("Hello!"); })) {
        Println(">>", x1, y1);
        x := function(a i32, b i32) i32 {
            return a + b;
        };
        Println(x(1, 2));
    }
    Println(2 + 2);

    {
        local x i32 = 100;
        Println(x);
    }

    if (3 <= 2) {
        Println("Heeeellllooo!!!!");
        Println("World!");
    } else {
        Println("Nah!!");
    }

    a, b, c = 4, 5, 6;
    return 100;
}

function iter(a i32, value i32) void {
    Println(value);
}