import ( Dog ) from "./test.ns";
import ( Args ) from "go:os";
import ( Println, Print ) from "go:fmt";
import ( Time ) from "go:time";

var DATA i32 = 100, TYPE str = "true", PascalTest i8 = 10;

struct Person {
    Name str;
    Age  i32;
    Pet  Dog;
}


define (p Person) GetName() str {
    return p.Name;
}

struct King {
    Name str;
    Age  i32;
    Pet  Dog;
}

define (p Person) GetPet() void panics {
   panic("tada!!!");
}

const Kill str = "adadaasdas";

define add(a i32, b i32) i32 panics {
    panic(">> Damn..");
    return a + b;
}

define justCall() void panics {
    println(add(10, 20));
}

define toNewThread() i32 {
    println("Hello World From new Thread!!");
    return 1;
}

define returnArr() [str] {
    return ["A", "B", "C"];
}

define returnErr() (bool, error) {
    return true, null;
}

define main(args [str]) i32 {
    local g num = 1000 + 20.2;
    a, b, c := 1, 2, 3;
    println(
        "Hello, World!",
        args,
        0xff,
        a,b,c,g
    );
    v := 2 << 2;
    println(v);
    const arr [i32] = [1, 2, 3, 4];
    println(arr);
    arr.Push(1000);
    println(arr);
    println(arr.Pop());
    run toNewThread();
    Println("Hello, from Go mix!!");
    x, y := returnErr();
    Println(x, y);
    local p Person* = new Person {
        Name: "Philipp Andrew"
    };
    println(p);

    local intptr i32* = null;
    println(intptr);
    Println(p.Name, p.GetName());
    return 100;
}
